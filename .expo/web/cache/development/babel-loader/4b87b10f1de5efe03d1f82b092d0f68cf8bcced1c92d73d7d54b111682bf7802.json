{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport libraries from \"./data/libraries\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LibraryListScreen = function LibraryListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchText = _useState2[0],\n    setSearchText = _useState2[1];\n  var filteredLibraries = libraries.filter(function (library) {\n    return library.name.toLowerCase().includes(searchText.toLowerCase().trim());\n  });\n  var _useState3 = useState(libraries),\n    _useState4 = _slicedToArray(_useState3, 2),\n    sortedLibraries = _useState4[0],\n    setSortedLibraries = _useState4[1];\n  var sortLibrariesByPopularity = function sortLibrariesByPopularity(libraries) {\n    return libraries.slice().sort(function (a, b) {\n      return b.popularity - a.popularity;\n    });\n  };\n  var sortLibrariesByProximity = function sortLibrariesByProximity(libraries) {\n    return libraries.slice().sort(function (a, b) {\n      return a.proximity - b.proximity;\n    });\n  };\n  var sortByPopularity = function sortByPopularity() {\n    var sorted = sortLibrariesByPopularity(_toConsumableArray(sortedLibraries));\n    setSortedLibraries(sorted);\n  };\n  var sortByProximity = function sortByProximity() {\n    var sorted = sortLibrariesByProximity(_toConsumableArray(sortedLibraries));\n    setSortedLibraries(sorted);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      title: \"Sort by Popularity\",\n      onPress: sortByPopularity\n    }), _jsx(Button, {\n      title: \"Sort by Proximity\",\n      onPress: sortByProximity,\n      color: \"green\"\n    }), _jsx(TextInput, {\n      placeholder: \"Search libraries\",\n      value: searchText,\n      onChangeText: setSearchText,\n      style: styles.input\n    }), _jsx(FlatList, {\n      data: filteredLibraries,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(TouchableOpacity, {\n          style: styles.card,\n          onPress: function onPress() {\n            return navigation.navigate('LibraryDetail', {\n              library: item\n            });\n          },\n          children: [_jsx(Image, {\n            source: {\n              uri: item.imageUri\n            },\n            style: styles.image\n          }), _jsxs(View, {\n            style: styles.cardContent,\n            children: [_jsx(Text, {\n              style: styles.title,\n              children: item.name\n            }), _jsx(Text, {\n              children: item.summary\n            })]\n          })]\n        });\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 8\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 10,\n    flexDirection: 'row'\n  },\n  image: {\n    width: 80,\n    height: 80,\n    borderRadius: 5,\n    marginRight: 10\n  },\n  cardContent: {\n    flex: 1\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default LibraryListScreen;","map":{"version":3,"names":["React","useState","View","Text","FlatList","TextInput","TouchableOpacity","Image","StyleSheet","Button","libraries","jsx","_jsx","jsxs","_jsxs","LibraryListScreen","_ref","navigation","_useState","_useState2","_slicedToArray","searchText","setSearchText","filteredLibraries","filter","library","name","toLowerCase","includes","trim","_useState3","_useState4","sortedLibraries","setSortedLibraries","sortLibrariesByPopularity","slice","sort","a","b","popularity","sortLibrariesByProximity","proximity","sortByPopularity","sorted","_toConsumableArray","sortByProximity","style","styles","container","children","title","onPress","color","placeholder","value","onChangeText","input","data","keyExtractor","item","id","toString","renderItem","_ref2","card","navigate","source","uri","imageUri","image","cardContent","summary","create","flex","padding","height","borderColor","borderWidth","marginBottom","backgroundColor","borderRadius","flexDirection","width","marginRight","fontSize","fontWeight"],"sources":["C:/Users/saura/OneDrive/Desktop/ReatcNative Workspace/BookNook/allComponents/LibraryListScreen.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { View, Text, FlatList, TextInput, TouchableOpacity, Image, StyleSheet, Button } from 'react-native';\r\n\r\n// import libraries from './data/libraries'; // Mocked data\r\n\r\n// const LibraryListScreen = ({ navigation }) => {\r\n//   const [searchText, setSearchText] = useState('');\r\n//   const filteredLibraries = libraries.filter((library) =>\r\n//     library.name.toLowerCase().includes(searchText.toLowerCase())\r\n//   );\r\n\r\n//   const [sortedLibraries, setSortedLibraries] = useState(libraries);\r\n\r\n//   // Function to sort libraries by popularity\r\n//   const sortLibrariesByPopularity = (libraries) => {\r\n//     return libraries.slice().sort((a, b) => b.popularity - a.popularity);\r\n//   };\r\n\r\n//   // Function to sort libraries by proximity\r\n//   const sortLibrariesByProximity = (libraries) => {\r\n//     return libraries.slice().sort((a, b) => a.proximity - b.proximity);\r\n//   };\r\n\r\n//   const sortByPopularity = () => {\r\n//     const sorted = sortLibrariesByPopularity(sortedLibraries);\r\n//     setSortedLibraries(sorted);\r\n//   };\r\n\r\n//   const sortByProximity = () => {\r\n//     const sorted = sortLibrariesByProximity(sortedLibraries);\r\n//     setSortedLibraries(sorted);\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Button title=\"Sort by Popularity\" onPress={sortByPopularity} /><br></br>\r\n//       <Button title=\"Sort by Proximity\" onPress={sortByProximity} color=\"green\"/><br></br>\r\n//       <TextInput\r\n//         placeholder=\"Search libraries\"\r\n//         value={searchText}\r\n//         onChangeText={setSearchText}\r\n//         style={styles.input}\r\n//       />\r\n//       <FlatList\r\n//         data={sortedLibraries}\r\n//         keyExtractor={(item) => item.id.toString()}\r\n//         renderItem={({ item }) => (\r\n//           <TouchableOpacity\r\n//             style={styles.card}\r\n//             onPress={() => navigation.navigate('LibraryDetail', { library: item })}\r\n//           >\r\n//             <Image source={{ uri: item.imageUri }} style={styles.image} />\r\n//             <View style={styles.cardContent}>\r\n//               <Text style={styles.title}>{item.name}</Text>\r\n//               <Text>{item.summary}</Text>\r\n//             </View>\r\n//           </TouchableOpacity>\r\n//         )}\r\n//       />\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     padding: 16,\r\n//   },\r\n//   input: {\r\n//     height: 40,\r\n//     borderColor: 'gray',\r\n//     borderWidth: 1,\r\n//     marginBottom: 10,\r\n//     padding: 8,\r\n//   },\r\n//   card: {\r\n//     backgroundColor: '#fff',\r\n//     borderRadius: 10,\r\n//     padding: 10,\r\n//     marginBottom: 10,\r\n//     flexDirection: 'row',\r\n//   },\r\n//   image: {\r\n//     width: 80,\r\n//     height: 80,\r\n//     borderRadius: 5,\r\n//     marginRight: 10,\r\n//   },\r\n//   cardContent: {\r\n//     flex: 1,\r\n//   },\r\n//   title: {\r\n//     fontSize: 18,\r\n//     fontWeight: 'bold',\r\n//   },\r\n// });\r\n\r\n// export default LibraryListScreen;\r\n\r\n// import React, { useState } from 'react';\r\n// import { View, Text, FlatList, TextInput, TouchableOpacity, Image, StyleSheet, Button } from 'react-native';\r\n\r\n// import libraries from './data/libraries'; // Mocked data\r\n\r\n// const LibraryListScreen = ({ navigation }) => {\r\n//   const [searchText, setSearchText] = useState('');\r\n//   const filteredLibraries = libraries.filter((library) =>\r\n//     library.name.toLowerCase().includes(searchText.toLowerCase().trim()) // Use trim()\r\n//   );\r\n\r\n//   const [sortedLibraries, setSortedLibraries] = useState(libraries);\r\n\r\n//   // Function to sort libraries by popularity\r\n//   const sortLibrariesByPopularity = (libraries) => {\r\n//     return libraries.slice().sort((a, b) => b.popularity - a.popularity);\r\n//   };\r\n\r\n//   // Function to sort libraries by proximity\r\n//   const sortLibrariesByProximity = (libraries) => {\r\n//     return libraries.slice().sort((a, b) => a.proximity - b.proximity);\r\n//   };\r\n\r\n//   const sortByPopularity = () => {\r\n//     const sorted = sortLibrariesByPopularity(sortedLibraries);\r\n//     setSortedLibraries(sorted);\r\n//   };\r\n\r\n//   const sortByProximity = () => {\r\n//     const sorted = sortLibrariesByProximity(sortedLibraries);\r\n//     setSortedLibraries(sorted);\r\n//   };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Button title=\"Sort by Popularity\" onPress={sortByPopularity} /><br></br>\r\n//       <Button title=\"Sort by Proximity\" onPress={sortByProximity} color=\"green\"/><br></br>\r\n//       <TextInput\r\n//         placeholder=\"Search libraries\"\r\n//         value={searchText}\r\n//         onChangeText={setSearchText}\r\n//         style={styles.input}\r\n//       />\r\n//       <FlatList\r\n//         data={filteredLibraries}\r\n//         keyExtractor={(item) => item.id.toString()}\r\n//         renderItem={({ item }) => (\r\n//           <TouchableOpacity\r\n//             style={styles.card}\r\n//             onPress={() => navigation.navigate('LibraryDetail', { library: item })}\r\n//           >\r\n//             <Image source={{ uri: item.imageUri }} style={styles.image} />\r\n//             <View style={styles.cardContent}>\r\n//               <Text style={styles.title}>{item.name}</Text>\r\n//               <Text>{item.summary}</Text>\r\n//             </View>\r\n//           </TouchableOpacity>\r\n//         )}\r\n//       />\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     padding: 16,\r\n//   },\r\n//   input: {\r\n//     height: 40,\r\n//     borderColor: 'gray',\r\n//     borderWidth: 1,\r\n//     marginBottom: 10,\r\n//     padding: 8,\r\n//   },\r\n//   card: {\r\n//     backgroundColor: '#fff',\r\n//     borderRadius: 10,\r\n//     padding: 10,\r\n//     marginBottom: 10,\r\n//     flexDirection: 'row',\r\n//   },\r\n//   image: {\r\n//     width: 80,\r\n//     height: 80,\r\n//     borderRadius: 5,\r\n//     marginRight: 10,\r\n//   },\r\n//   cardContent: {\r\n//     flex: 1,\r\n//   },\r\n//   title: {\r\n//     fontSize: 18,\r\n//     fontWeight: 'bold',\r\n//   },\r\n// });\r\n\r\n// export default LibraryListScreen;\r\n\r\nimport React, { useState } from 'react';\r\nimport { View, Text, FlatList, TextInput, TouchableOpacity, Image, StyleSheet, Button } from 'react-native';\r\n\r\nimport libraries from './data/libraries'; // Mocked data\r\n\r\nconst LibraryListScreen = ({ navigation }) => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const filteredLibraries = libraries.filter((library) =>\r\n    library.name.toLowerCase().includes(searchText.toLowerCase().trim())\r\n  );\r\n\r\n  const [sortedLibraries, setSortedLibraries] = useState(libraries);\r\n\r\n  // Function to sort libraries by popularity\r\n  const sortLibrariesByPopularity = (libraries) => {\r\n    return libraries.slice().sort((a, b) => b.popularity - a.popularity);\r\n  };\r\n\r\n  // Function to sort libraries by proximity\r\n  const sortLibrariesByProximity = (libraries) => {\r\n    return libraries.slice().sort((a, b) => a.proximity - b.proximity);\r\n  };\r\n\r\n  const sortByPopularity = () => {\r\n    const sorted = sortLibrariesByPopularity([...sortedLibraries]);\r\n    setSortedLibraries(sorted);\r\n  };\r\n\r\n  const sortByProximity = () => {\r\n    const sorted = sortLibrariesByProximity([...sortedLibraries]);\r\n    setSortedLibraries(sorted);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Button title=\"Sort by Popularity\" onPress={sortByPopularity} />\r\n      <Button title=\"Sort by Proximity\" onPress={sortByProximity} color=\"green\" />\r\n      <TextInput\r\n        placeholder=\"Search libraries\"\r\n        value={searchText}\r\n        onChangeText={setSearchText}\r\n        style={styles.input}\r\n      />\r\n      <FlatList\r\n        data={filteredLibraries}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <TouchableOpacity\r\n            style={styles.card}\r\n            onPress={() => navigation.navigate('LibraryDetail', { library: item })}\r\n          >\r\n            <Image source={{ uri: item.imageUri }} style={styles.image} />\r\n            <View style={styles.cardContent}>\r\n              <Text style={styles.title}>{item.name}</Text>\r\n              <Text>{item.summary}</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    padding: 8,\r\n  },\r\n  card: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    flexDirection: 'row',\r\n  },\r\n  image: {\r\n    width: 80,\r\n    height: 80,\r\n    borderRadius: 5,\r\n    marginRight: 10,\r\n  },\r\n  cardContent: {\r\n    flex: 1,\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default LibraryListScreen;\r\n"],"mappings":";;AAsMA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAGxC,OAAOC,SAAS;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzC,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACrC,IAAAC,SAAA,GAAoCjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAMI,iBAAiB,GAAGb,SAAS,CAACc,MAAM,CAAC,UAACC,OAAO;IAAA,OACjDA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC;EAAA,CACtE,CAAC;EAED,IAAAC,UAAA,GAA8C7B,QAAQ,CAACS,SAAS,CAAC;IAAAqB,UAAA,GAAAX,cAAA,CAAAU,UAAA;IAA1DE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAG1C,IAAMG,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAIxB,SAAS,EAAK;IAC/C,OAAOA,SAAS,CAACyB,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAKA,CAAC,CAACC,UAAU,GAAGF,CAAC,CAACE,UAAU;IAAA,EAAC;EACtE,CAAC;EAGD,IAAMC,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAI9B,SAAS,EAAK;IAC9C,OAAOA,SAAS,CAACyB,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAKD,CAAC,CAACI,SAAS,GAAGH,CAAC,CAACG,SAAS;IAAA,EAAC;EACpE,CAAC;EAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7B,IAAMC,MAAM,GAAGT,yBAAyB,CAAAU,kBAAA,CAAKZ,eAAe,CAAC,CAAC;IAC9DC,kBAAkB,CAACU,MAAM,CAAC;EAC5B,CAAC;EAED,IAAME,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,IAAMF,MAAM,GAAGH,wBAAwB,CAAAI,kBAAA,CAAKZ,eAAe,CAAC,CAAC;IAC7DC,kBAAkB,CAACU,MAAM,CAAC;EAC5B,CAAC;EAED,OACE7B,KAAA,CAACZ,IAAI;IAAC4C,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BrC,IAAA,CAACH,MAAM;MAACyC,KAAK,EAAC,oBAAoB;MAACC,OAAO,EAAET;IAAiB,CAAE,CAAC,EAChE9B,IAAA,CAACH,MAAM;MAACyC,KAAK,EAAC,mBAAmB;MAACC,OAAO,EAAEN,eAAgB;MAACO,KAAK,EAAC;IAAO,CAAE,CAAC,EAC5ExC,IAAA,CAACP,SAAS;MACRgD,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEjC,UAAW;MAClBkC,YAAY,EAAEjC,aAAc;MAC5BwB,KAAK,EAAEC,MAAM,CAACS;IAAM,CACrB,CAAC,EACF5C,IAAA,CAACR,QAAQ;MACPqD,IAAI,EAAElC,iBAAkB;MACxBmC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKA,IAAI,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC3CC,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGJ,IAAI,GAAAI,KAAA,CAAJJ,IAAI;QAAA,OACjB7C,KAAA,CAACR,gBAAgB;UACfwC,KAAK,EAAEC,MAAM,CAACiB,IAAK;UACnBb,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMlC,UAAU,CAACgD,QAAQ,CAAC,eAAe,EAAE;cAAExC,OAAO,EAAEkC;YAAK,CAAC,CAAC;UAAA,CAAC;UAAAV,QAAA,GAEvErC,IAAA,CAACL,KAAK;YAAC2D,MAAM,EAAE;cAAEC,GAAG,EAAER,IAAI,CAACS;YAAS,CAAE;YAACtB,KAAK,EAAEC,MAAM,CAACsB;UAAM,CAAE,CAAC,EAC9DvD,KAAA,CAACZ,IAAI;YAAC4C,KAAK,EAAEC,MAAM,CAACuB,WAAY;YAAArB,QAAA,GAC9BrC,IAAA,CAACT,IAAI;cAAC2C,KAAK,EAAEC,MAAM,CAACG,KAAM;cAAAD,QAAA,EAAEU,IAAI,CAACjC;YAAI,CAAO,CAAC,EAC7Cd,IAAA,CAACT,IAAI;cAAA8C,QAAA,EAAEU,IAAI,CAACY;YAAO,CAAO,CAAC;UAAA,CACvB,CAAC;QAAA,CACS,CAAC;MAAA;IACnB,CACH,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,IAAMxB,MAAM,GAAGvC,UAAU,CAACgE,MAAM,CAAC;EAC/BxB,SAAS,EAAE;IACTyB,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDlB,KAAK,EAAE;IACLmB,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,EAAE;IAChBJ,OAAO,EAAE;EACX,CAAC;EACDV,IAAI,EAAE;IACJe,eAAe,EAAE,MAAM;IACvBC,YAAY,EAAE,EAAE;IAChBN,OAAO,EAAE,EAAE;IACXI,YAAY,EAAE,EAAE;IAChBG,aAAa,EAAE;EACjB,CAAC;EACDZ,KAAK,EAAE;IACLa,KAAK,EAAE,EAAE;IACTP,MAAM,EAAE,EAAE;IACVK,YAAY,EAAE,CAAC;IACfG,WAAW,EAAE;EACf,CAAC;EACDb,WAAW,EAAE;IACXG,IAAI,EAAE;EACR,CAAC;EACDvB,KAAK,EAAE;IACLkC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAetE,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}