{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport libraries from \"./data/libraries\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LibraryListScreen = function LibraryListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchText = _useState2[0],\n    setSearchText = _useState2[1];\n  var filteredLibraries = libraries.filter(function (library) {\n    return library.name.toLowerCase().includes(searchText.toLowerCase());\n  });\n  var sortByPopularity = function sortByPopularity() {\n    var sorted = sortLibrariesByPopularity(sortedLibraries);\n    setSortedLibraries(sorted);\n  };\n  var sortByProximity = function sortByProximity() {\n    var sorted = sortLibrariesByProximity(sortedLibraries);\n    setSortedLibraries(sorted);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      placeholder: \"Search libraries\",\n      value: searchText,\n      onChangeText: setSearchText,\n      style: styles.input\n    }), _jsx(FlatList, {\n      data: filteredLibraries,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(TouchableOpacity, {\n          style: styles.card,\n          onPress: function onPress() {\n            return navigation.navigate('LibraryDetail', {\n              library: item\n            });\n          },\n          children: [_jsx(Image, {\n            source: item.imageUri,\n            style: styles.image\n          }), _jsxs(View, {\n            style: styles.cardContent,\n            children: [_jsx(Text, {\n              style: styles.title,\n              children: item.name\n            }), _jsx(Text, {\n              children: item.summary\n            })]\n          })]\n        });\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 8\n  },\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    padding: 10,\n    marginBottom: 10,\n    flexDirection: 'row'\n  },\n  image: {\n    width: 80,\n    height: 80,\n    borderRadius: 5,\n    marginRight: 10\n  },\n  cardContent: {\n    flex: 1\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default LibraryListScreen;","map":{"version":3,"names":["React","useState","View","Text","FlatList","TextInput","TouchableOpacity","Image","StyleSheet","libraries","jsx","_jsx","jsxs","_jsxs","LibraryListScreen","_ref","navigation","_useState","_useState2","_slicedToArray","searchText","setSearchText","filteredLibraries","filter","library","name","toLowerCase","includes","sortByPopularity","sorted","sortLibrariesByPopularity","sortedLibraries","setSortedLibraries","sortByProximity","sortLibrariesByProximity","style","styles","container","children","placeholder","value","onChangeText","input","data","keyExtractor","item","id","toString","renderItem","_ref2","card","onPress","navigate","source","imageUri","image","cardContent","title","summary","create","flex","padding","height","borderColor","borderWidth","marginBottom","backgroundColor","borderRadius","flexDirection","width","marginRight","fontSize","fontWeight"],"sources":["C:/Users/saura/OneDrive/Desktop/ReatcNative Workspace/BookNook/allComponents/LibraryListScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, FlatList, TextInput, TouchableOpacity, Image, StyleSheet } from 'react-native';\r\n\r\nimport libraries from './data/libraries'; // Mocked data\r\n\r\nconst LibraryListScreen = ({ navigation }) => {\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  const filteredLibraries = libraries.filter(library =>\r\n    library.name.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n\r\n    // Function to sort libraries by popularity\r\n    const sortByPopularity = () => {\r\n      const sorted = sortLibrariesByPopularity(sortedLibraries);\r\n      setSortedLibraries(sorted);\r\n    };\r\n  \r\n    // Function to sort libraries by proximity\r\n    const sortByProximity = () => {\r\n      const sorted = sortLibrariesByProximity(sortedLibraries);\r\n      setSortedLibraries(sorted);\r\n    };\r\n    \r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        placeholder=\"Search libraries\"\r\n        value={searchText}\r\n        onChangeText={setSearchText}\r\n        style={styles.input}\r\n      />\r\n      <FlatList\r\n        data={filteredLibraries}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <TouchableOpacity\r\n            style={styles.card}\r\n            onPress={() => navigation.navigate('LibraryDetail', { library: item })}\r\n          >\r\n            <Image source={item.imageUri} style={styles.image} />\r\n            <View style={styles.cardContent}>\r\n              <Text style={styles.title}>{item.name}</Text>\r\n              <Text>{item.summary}</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    padding: 8,\r\n  },\r\n  card: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    flexDirection: 'row',\r\n  },\r\n  image: {\r\n    width: 80,\r\n    height: 80,\r\n    borderRadius: 5,\r\n    marginRight: 10,\r\n  },\r\n  cardContent: {\r\n    flex: 1,\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default LibraryListScreen;\r\n\r\n// import React, { useState } from 'react';\r\n// import { View, Text, FlatList, TextInput, TouchableOpacity, Image, StyleSheet } from 'react-native';\r\n\r\n// import libraries from './data/libraries'; // Mocked data\r\n\r\n// const LibraryListScreen = ({ navigation }) => {\r\n\r\n//   const [searchText, setSearchText] = useState('');\r\n//   const filteredLibraries = libraries.filter(library =>\r\n//     library.name.toLowerCase().includes(searchText.toLowerCase())\r\n//   );\r\n\r\n//   const [sortedLibraries, setSortedLibraries] = useState(libraries); // Initialize with the original data\r\n\r\n  // // Function to sort libraries by popularity\r\n  // const sortByPopularity = () => {\r\n  //   const sorted = sortLibrariesByPopularity(sortedLibraries);\r\n  //   setSortedLibraries(sorted);\r\n  // };\r\n\r\n  // // Function to sort libraries by proximity\r\n  // const sortByProximity = () => {\r\n  //   const sorted = sortLibrariesByProximity(sortedLibraries);\r\n  //   setSortedLibraries(sorted);\r\n  // };\r\n\r\n//   return (\r\n//     <View style={styles.container}>\r\n//       <Button title=\"Sort by Popularity\" onPress={sortByPopularity} />\r\n//       <Button title=\"Sort by Proximity\" onPress={sortByProximity} />\r\n//       <FlatList\r\n//         data={sortedLibraries}\r\n//         keyExtractor={(item) => item.id.toString()}\r\n//         renderItem={({ item }) => (\r\n//           <View>\r\n//             <Text>{item.name}</Text>\r\n//             <Text>{item.summary}</Text>\r\n//           </View>\r\n//         )}\r\n//       />\r\n//       <TextInput\r\n//         placeholder=\"Search libraries\"\r\n//         value={searchText}\r\n//         onChangeText={setSearchText}\r\n//         style={styles.input}\r\n//       />\r\n//       <FlatList\r\n//         data={filteredLibraries}\r\n//         keyExtractor={(item) => item.id.toString()}\r\n//         renderItem={({ item }) => (\r\n//           <TouchableOpacity\r\n//             style={styles.card}\r\n//             onPress={() => navigation.navigate('LibraryDetail', { library: item })}\r\n//           >\r\n//             <Image source={item.imageUri} style={styles.image} />\r\n//             <View style={styles.cardContent}>\r\n//               <Text style={styles.title}>{item.name}</Text>\r\n//               <Text>{item.summary}</Text>\r\n//             </View>\r\n//           </TouchableOpacity>\r\n//         )}\r\n//       />\r\n//     </View>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     padding: 16,\r\n//   },\r\n//   input: {\r\n//     height: 40,\r\n//     borderColor: 'gray',\r\n//     borderWidth: 1,\r\n//     marginBottom: 10,\r\n//     padding: 8,\r\n//   },\r\n//   card: {\r\n//     backgroundColor: 'white',\r\n//     borderRadius: 10,\r\n//     padding: 10,\r\n//     marginBottom: 10,\r\n//     flexDirection: 'row',\r\n//     alignItems: 'center',\r\n//   },\r\n//   image: {\r\n//     width: 80,\r\n//     height: 80,\r\n//     borderRadius: 10,\r\n//     marginRight: 10,\r\n//   },\r\n//   cardContent: {\r\n//     flex: 1,\r\n//   },\r\n//   title: {\r\n//     fontSize: 18,\r\n//     fontWeight: 'bold',\r\n//   },\r\n// });\r\n\r\n// export default LibraryListScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}